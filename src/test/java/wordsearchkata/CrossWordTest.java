/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package wordsearchkata;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class CrossWordTest {


    CrossWord crossWord;

    @Before
    public void setUp() {
        crossWord = new CrossWord();
    }

    /*
    //SingleWordTests
    @Test public void shouldReturnBONES() {

        assertEquals("BONES: (0,6),(0,7),(0,8),(0,9),(0,10)", crossWord.word("BONES"));
    }

    @Test public void shouldReturnKHAN() {

        assertEquals("KHAN: (5,9),(5,8),(5,7),(5,6)", crossWord.word("KHAN"));
    }

    @Test public void shouldReturnKIRK() {

        assertEquals("KIRK: (4,7),(3,7),(2,7),(1,7)", crossWord.word("KIRK"));
    }

    @Test public void shouldReturnSCOTTY() {

        assertEquals("SCOTTY: (0,5),(1,5),(2,5),(3,5),(4,5),(5,5)", crossWord.word("SCOTTY"));
    }

    @Test public void shouldReturnSPOCK() {

        assertEquals("SPOCK: (2,1),(3,2),(4,3),(5,4),(6,5)", crossWord.word("SPOCK"));
    }

    @Test public void shouldReturnSULU() {

        assertEquals("SULU: (3,3),(2,2),(1,1),(0,0)", crossWord.word("SULU"));
    }

    @Test public void shouldReturnUHURA() {

        assertEquals("UHURA: (4,0),(3,1),(2,2),(1,3),(0,4)", crossWord.word("UHURA"));
    }*/

    @Test public void shouldReturnAllWords() {

        assertEquals("BONES: (0,6),(0,7),(0,8),(0,9),(0,10)\n" +
                "KHAN: (5,9),(5,8),(5,7),(5,6)\n" +
                "KIRK: (4,7),(3,7),(2,7),(1,7)\n" +
                "SCOTTY: (0,5),(1,5),(2,5),(3,5),(4,5),(5,5)\n" +
                "SPOCK: (2,1),(3,2),(4,3),(5,4),(6,5)\n" +
                "SULU: (3,3),(2,2),(1,1),(0,0)\n" +
                "UHURA: (4,0),(3,1),(2,2),(1,3),(0,4)", crossWord.word("BONES,KHAN,KIRK,SCOTTY,SPOCK,SULU,UHURA"));
    }

}



